[{"C:\\Users\\alexr\\Desktop\\stock-app\\src\\index.js":"1","C:\\Users\\alexr\\Desktop\\stock-app\\src\\App.js":"2","C:\\Users\\alexr\\Desktop\\stock-app\\src\\store.js":"3","C:\\Users\\alexr\\Desktop\\stock-app\\src\\reducers\\index.js":"4","C:\\Users\\alexr\\Desktop\\stock-app\\src\\reducers\\productReducers.js":"5","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Login.js":"6","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Register.js":"7","C:\\Users\\alexr\\Desktop\\stock-app\\src\\firebase.js":"8","C:\\Users\\alexr\\Desktop\\stock-app\\src\\actions\\usersActions.js":"9","C:\\Users\\alexr\\Desktop\\stock-app\\src\\types\\index.js":"10","C:\\Users\\alexr\\Desktop\\stock-app\\src\\reducers\\userReducers.js":"11","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\PrincipalPage.js":"12","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Header.js":"13","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Navbar.js":"14","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Suppliers.js":"15","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Supplier.js":"16","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Customers.js":"17","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Customer.js":"18","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Stock.js":"19","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\SelectSupplier.js":"20","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Product.js":"21"},{"size":219,"mtime":1608108132394,"results":"22","hashOfConfig":"23"},{"size":2246,"mtime":1608191891901,"results":"24","hashOfConfig":"23"},{"size":417,"mtime":1607338721040,"results":"25","hashOfConfig":"23"},{"size":229,"mtime":1607589574084,"results":"26","hashOfConfig":"23"},{"size":169,"mtime":1607338438280,"results":"27","hashOfConfig":"23"},{"size":2945,"mtime":1608152186109,"results":"28","hashOfConfig":"23"},{"size":2768,"mtime":1607588870664,"results":"29","hashOfConfig":"23"},{"size":555,"mtime":1607342961103,"results":"30","hashOfConfig":"23"},{"size":406,"mtime":1607592799508,"results":"31","hashOfConfig":"23"},{"size":94,"mtime":1607592564747,"results":"32","hashOfConfig":"23"},{"size":423,"mtime":1607592647049,"results":"33","hashOfConfig":"23"},{"size":566,"mtime":1607596355984,"results":"34","hashOfConfig":"23"},{"size":4068,"mtime":1608287048496,"results":"35","hashOfConfig":"23"},{"size":1432,"mtime":1607947810334,"results":"36","hashOfConfig":"23"},{"size":9098,"mtime":1608281112527,"results":"37","hashOfConfig":"23"},{"size":3090,"mtime":1608119556604,"results":"38","hashOfConfig":"23"},{"size":10927,"mtime":1608196323557,"results":"39","hashOfConfig":"23"},{"size":3149,"mtime":1608154294742,"results":"40","hashOfConfig":"23"},{"size":10700,"mtime":1608288442836,"results":"41","hashOfConfig":"23"},{"size":0,"mtime":1608279549556,"results":"42","hashOfConfig":"23"},{"size":4385,"mtime":1608287719918,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1657a29",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\alexr\\Desktop\\stock-app\\src\\index.js",[],["94","95"],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\App.js",["96"],"import \"./App.css\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { auth } from \"./firebase\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserAction } from \"./actions/usersActions\";\nimport PrincipalPage from \"./components/PrincipalPage\";\nimport Header from \"./components/Header\";\nimport { closeSesionAction } from \"./actions/usersActions\";\nimport Suppliers from \"./components/Suppliers\";\nimport Customers from \"./components/Customers\";\nimport Stock from \"./components/Stock\";\n\nfunction wrappApp() {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n}\nfunction App() {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.users.user);\n  useEffect(() => {\n    auth.onAuthStateChanged((result) => {\n      if (result) {\n        dispatch(\n          getUserAction({\n            displayName: result.displayName,\n            email: result.email,\n            photoUrl: result.photoURL,\n            uid: result.uid,\n          })\n        );\n      } else {\n        dispatch(closeSesionAction());\n      }\n    });\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n            <Route path=\"/administrator\">\n              <Header />\n              <PrincipalPage />\n            </Route>\n            <Route path=\"/myprofile\">\n              <Header />\n              <PrincipalPage />\n            </Route>\n            <Route path=\"/customers\">\n              <Header />\n              <Customers />\n            </Route>\n            <Route path=\"/suppliers\">\n              <Header />\n              <Suppliers />\n            </Route>\n            <Route path=\"/panel\">\n              <Header />\n              <Stock />\n            </Route>\n            <Route path=\"/\">\n              <Login />\n            </Route>\n          </Switch>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default wrappApp;\n","C:\\Users\\alexr\\Desktop\\stock-app\\src\\store.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\reducers\\index.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\reducers\\productReducers.js",["97"],"const inisialState = {\r\n  products: [],\r\n};\r\n\r\nexport default (state = inisialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Login.js",["98","99"],"import React, { useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport login from \"./../images/login.png\";\r\nimport {\r\n  Backdrop,\r\n  CircularProgress,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { auth } from \"./../firebase\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const history = useHistory();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const { email, password } = user;\r\n  const handleChange = (e) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (email.trim() === \"\" || password.trim === \"\") {\r\n      return setError(\"Todos los campos son Obligatorios\");\r\n    }\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((result) => {\r\n        console.log(\"login succesfully!\");\r\n        setOpen(true);\r\n        setTimeout(() => {\r\n          setOpen(false);\r\n          history.push(\"/suppliers\");\r\n        }, 1500);\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__containerImg\">\r\n        <img src={login} alt=\"loginimage\" />\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"login__container\">\r\n          <h1>Login</h1>\r\n          {error ? <Alert severity=\"error\">{error}</Alert> : null}\r\n\r\n          <div className=\"login__inputs\">\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              variant=\"outlined\"\r\n              value={email}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"login__inputs\">\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Contraseña\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              value={password}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"login__inputs\">\r\n            <button>Ingresar</button>\r\n            <Link to=\"/register\">Crear una cuenta</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n        <CircularProgress color=\"inherit\" />{\" \"}\r\n        <span>Redireccionando hacia la pagina principal</span>\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Register.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\firebase.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\actions\\usersActions.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\types\\index.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\reducers\\userReducers.js",["100"],"import { GET_USER_LOGEG, CLOSE_SESION } from \"./../types\";\r\n\r\nconst inisialState = {\r\n  user: null,\r\n};\r\n\r\nexport default (state = inisialState, action) => {\r\n  switch (action.type) {\r\n    case GET_USER_LOGEG:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case CLOSE_SESION:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\PrincipalPage.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Header.js",["101","102","103"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { closeSesionAction } from \"./../actions/usersActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { auth } from \"../firebase\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction Header() {\r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const user = useSelector((state) => state.users.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const handleClickClose = () => {\r\n    auth.signOut();\r\n    dispatch(closeSesionAction());\r\n    history.push(\"/\");\r\n  };\r\n  const [thetime, setThetime] = useState({\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  });\r\n\r\n  const { hours, minutes, seconds } = thetime;\r\n  useEffect(() => {\r\n    function clock() {\r\n      let hour = document.getElementById(\"hours\");\r\n      let min = document.getElementById(\"minutes\");\r\n      let sec = document.getElementById(\"seconds\");\r\n\r\n      let h = new Date().getHours();\r\n      let m = new Date().getMinutes();\r\n      let s = new Date().getSeconds();\r\n\r\n      setThetime({\r\n        hours: h,\r\n        minutes: m,\r\n        seconds: s,\r\n      });\r\n    }\r\n    setInterval(clock, 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__menuicon\">\r\n        <IconButton\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n        >\r\n          {[\"left\"].map((anchor) => (\r\n            <React.Fragment key={anchor}>\r\n              <MenuIcon\r\n                style={{ color: \"white\", outline: \"none\" }}\r\n                onClick={toggleDrawer(anchor, true)}\r\n              />\r\n              <Drawer\r\n                anchor={anchor}\r\n                open={state[anchor]}\r\n                onClose={toggleDrawer(anchor, false)}\r\n              >\r\n                <div className=\"header__toggledrawwer\">\r\n                  <div className=\"header__title\">\r\n                    <h1>App Stock</h1>\r\n                  </div>\r\n                  <Navbar />\r\n                </div>\r\n              </Drawer>\r\n            </React.Fragment>\r\n          ))}\r\n        </IconButton>\r\n        <div></div>\r\n      </div>\r\n      <div className=\"header__username\">\r\n        <span>\r\n          Bienvenido <strong>{user?.email}</strong>\r\n        </span>\r\n      </div>\r\n      <div className=\"header__time\">\r\n        <div className=\"header__clock\">\r\n          <span id=\"hours\">{hours}</span>\r\n          <p>Horas</p>\r\n        </div>\r\n        <div className=\"header__clock\">\r\n          <span id=\"minutes\">{minutes}</span>\r\n          <p>Minutos</p>\r\n        </div>\r\n        <div className=\"header__clock\">\r\n          <span id=\"seconds\">{seconds}</span>\r\n          <p>Segundos</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"header__logoutavatar\">\r\n        <Tooltip title=\"Cerrar Sesión\" TransitionComponent={Zoom}>\r\n          <Avatar\r\n            alt={user?.email.toUpperCase()}\r\n            src=\"/static/images/avatar/1.jpg\"\r\n            onClick={handleClickClose}\r\n          />\r\n        </Tooltip>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;\r\n","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Navbar.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Suppliers.js",["104","105","106"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport \"./Suppliers.css\";\r\nimport db from \"./../firebase\";\r\nimport firebase from \"firebase\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Supplier from \"./Supplier\";\r\n\r\n//here fancy package to dev a grid table\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst columns = [\r\n  { id: \"rut\", label: \"Rut\", minWidth: 170 },\r\n  { id: \"nombreproveedor\", label: \"Nombre Proveedor\", minWidth: 100 },\r\n  {\r\n    id: \"direccion\",\r\n    label: \"Dirección\",\r\n    minWidth: 170,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    id: \"city\",\r\n    label: \"Ciudad\",\r\n    minWidth: 170,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    id: \"creador\",\r\n    label: \"Ingresado Por\",\r\n    minWidth: 170,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    id: \"delete\",\r\n    label: \"#\",\r\n    minWidth: 50,\r\n    align: \"left\",\r\n  },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Suppliers() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [agregarClientes, setAgregarClientes] = useState(\r\n    \"Agregar Proveedores +\"\r\n  );\r\n  const [error, setError] = useState(\"\");\r\n  const userAuth = useSelector((state) => state.users.user);\r\n  const [suppliers, setSuppliers] = useState([]);\r\n  const [supplier, setSupplier] = useState({\r\n    namesupplier: \"\",\r\n    rutsupplier: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    province: \"\",\r\n  });\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isRendered = true;\r\n    db.collection(\"suppliers\")\r\n      .orderBy(\"created\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        setSuppliers(\r\n          snapshot.docs.map((doc) => ({ idInfo: doc.id, suppInfo: doc.data() }))\r\n        );\r\n      });\r\n    return () => {\r\n      isRendered = false;\r\n    };\r\n  }, []);\r\n\r\n  const { namesupplier, rutsupplier, address, city, province } = supplier;\r\n\r\n  const handleChange = (e) => {\r\n    setSupplier({\r\n      ...supplier,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      namesupplier.trim() === \"\" ||\r\n      rutsupplier.trim() === \"\" ||\r\n      city.trim() === \"\" ||\r\n      address.trim() === \"\" ||\r\n      province.trim() === \"\"\r\n    ) {\r\n      setError(\"Todos los campos son obligatorios\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n      return;\r\n    } else {\r\n      db.collection(\"suppliers\")\r\n        .doc(rutsupplier)\r\n        .set({\r\n          name: namesupplier.toUpperCase(),\r\n          address: address.toUpperCase(),\r\n          city: city.toUpperCase(),\r\n          province: province.toUpperCase(),\r\n          creator: userAuth.email,\r\n          created: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n        .catch((error) => {\r\n          setError(error.message);\r\n        });\r\n      setOpen(true);\r\n      setSupplier({\r\n        namesupplier: \"\",\r\n        rutsupplier: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        province: \"\",\r\n      });\r\n    }\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function showAndHideDiv() {\r\n    let div = document.getElementById(\"myDiv\");\r\n    let boton = document.getElementById(\"botonagregar\");\r\n\r\n    if (div.style.display === \"flex\") {\r\n      div.style.display = \"none\";\r\n      // boton.classList.add(\"buttonagregarmas\");\r\n      setAgregarClientes(\"Agregar Proveedores +\");\r\n      // boton.classList.remove(\"buttonagregarmenos\");\r\n    } else {\r\n      div.style.display = \"flex\";\r\n      // boton.classList.add(\"buttonagregarmenos\");\r\n      setAgregarClientes(\"Ocultar Agregar Proveedores -\");\r\n      // boton.classList.remove(\"buttonagregarmas\");\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"suppliers\">\r\n      <div className=\"suppliers__buttonagregar\">\r\n        <button onClick={showAndHideDiv} id=\"botonagregar\">\r\n          {agregarClientes}\r\n        </button>\r\n      </div>\r\n      <div className=\"suppliers__container\" id=\"myDiv\">\r\n        <div className=\"suppliers__title\">\r\n          <h3>Ingresar Proveedores</h3>\r\n          <div className=\"suppliers__error\">\r\n            {error && <Alert severity=\"error\">{error}</Alert>}\r\n          </div>\r\n        </div>\r\n        <div className=\"supplier__inputscontainer\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"suppliers__inputs\">\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Nombre\"\r\n                variant=\"outlined\"\r\n                name=\"namesupplier\"\r\n                value={namesupplier}\r\n                onChange={handleChange}\r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Rut\"\r\n                variant=\"outlined\"\r\n                name=\"rutsupplier\"\r\n                value={rutsupplier}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"suppliers__inputs2\">\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Dirección\"\r\n                variant=\"outlined\"\r\n                name=\"address\"\r\n                value={address}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"suppliers__inputs3\">\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Ciudad\"\r\n                variant=\"outlined\"\r\n                name=\"city\"\r\n                value={city}\r\n                onChange={handleChange}\r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Comuna / Provincia / Region\"\r\n                variant=\"outlined\"\r\n                name=\"province\"\r\n                value={province}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"success\">\r\n                Proveedor guardado con éxito\r\n              </Alert>\r\n            </Snackbar>\r\n            <div className=\"suppliers__button\">\r\n              <button type=\"submit\">Guardar</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className=\"suppliers2\">\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {suppliers\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <Supplier\r\n                        key={row.idInfo}\r\n                        id={row.idInfo}\r\n                        infodata={row.suppInfo}\r\n                      />\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 50]}\r\n            component=\"div\"\r\n            count={suppliers.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            labelRowsPerPage=\"Filas por página\"\r\n            backIconButtonText=\"Pagina anterior\"\r\n            nextIconButtonText=\"Siguiente pagina\"\r\n          />\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Suppliers;\r\n","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Supplier.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Customers.js",["107","108","109","110"],"import { makeStyles, Snackbar, TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./Customers.css\";\r\nimport \"./Suppliers.css\";\r\nimport db from \"./../firebase\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { SettingsPowerRounded } from \"@material-ui/icons\";\r\nimport firebase from \"firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Customer from \"./Customer\";\r\n\r\n//imports para las tablas\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst columns = [\r\n  { id: \"rut\", label: \"Rut\", minWidth: 100 },\r\n  {\r\n    id: \"nombreproveedor\",\r\n    label: \"Nombre Cliente\",\r\n    minWidth: 120,\r\n  },\r\n  {\r\n    id: \"direccion\",\r\n    label: \"Dirección\",\r\n    minWidth: 170,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    id: \"city\",\r\n    label: \"Ciudad\",\r\n    minWidth: 150,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    id: \"email\",\r\n    label: \"Email\",\r\n    minWidth: 170,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    id: \"phone\",\r\n    label: \"Teléfono\",\r\n    minWidth: 170,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    id: \"delete\",\r\n    label: \"#\",\r\n    minWidth: 50,\r\n    align: \"left\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  },\r\n}));\r\nfunction Customers() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [agregarClientes, setAgregarClientes] = useState(\"Agregar Clientes +\");\r\n  const userAuth = useSelector((state) => state.users.user);\r\n  const [customers, setCustomers] = useState([]);\r\n  const [customer, setCustomer] = useState({\r\n    namecustomer: \"\",\r\n    rutcustomer: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    province: \"\",\r\n    phone: \"\",\r\n    movil: \"\",\r\n    email: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const {\r\n    namecustomer,\r\n    rutcustomer,\r\n    address,\r\n    city,\r\n    province,\r\n    phone,\r\n    movil,\r\n    email,\r\n  } = customer;\r\n\r\n  //useEffect para obtener los datos de los clientes\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isRendering = true;\r\n    db.collection(\"customers\")\r\n      .orderBy(\"created\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        setCustomers(\r\n          snapshot.docs.map((doc) => ({ id: doc.id, datainfo: doc.data() }))\r\n        );\r\n      });\r\n    return () => {\r\n      isRendering = false;\r\n    };\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleChange = (e) => {\r\n    setCustomer({\r\n      ...customer,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (namecustomer.trim() === \"\") {\r\n      setError(\"El nombre del cliente es obligatorio\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n      return;\r\n    } else if (rutcustomer.trim() === \"\") {\r\n      setError(\"el rut del cliente es obligatorio\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n      return;\r\n    } else if (address.trim() === \"\") {\r\n      setError(\"La dirección es obligatoria\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n      return;\r\n    } else if (email.trim() === \"\") {\r\n      setError(\"El email es obligatorio\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n      return;\r\n    } else if (city.trim() === \"\") {\r\n      setError(\"La ciudad es obligatoria\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n      return;\r\n    } else {\r\n      db.collection(\"customers\")\r\n        .add({\r\n          namecustomer: namecustomer.toUpperCase(),\r\n          rutcustomer: rutcustomer,\r\n          address: address.toUpperCase(),\r\n          city: city.toUpperCase(),\r\n          province: province.toUpperCase(),\r\n          phone: phone,\r\n          movil: movil,\r\n          email: email.toUpperCase(),\r\n          created: firebase.firestore.FieldValue.serverTimestamp(),\r\n          creator: userAuth.email,\r\n        })\r\n        .then((result) => {\r\n          setOpen(true);\r\n          console.log(\"cliente agregado correctamente!\");\r\n          setCustomer({\r\n            namecustomer: \"\",\r\n            rutcustomer: \"\",\r\n            address: \"\",\r\n            city: \"\",\r\n            province: \"\",\r\n            phone: \"\",\r\n            movil: \"\",\r\n            email: \"\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.message);\r\n        });\r\n    }\r\n  };\r\n  function showAndHideDiv() {\r\n    let div = document.getElementById(\"myDiv\");\r\n    let boton = document.getElementById(\"botonagregar\");\r\n\r\n    if (div.style.display === \"flex\") {\r\n      div.style.display = \"none\";\r\n      // boton.classList.add(\"buttonagregarmas\");\r\n      setAgregarClientes(\"Agregar Clientes +\");\r\n      // boton.classList.remove(\"buttonagregarmenos\");\r\n    } else {\r\n      div.style.display = \"flex\";\r\n      // boton.classList.add(\"buttonagregarmenos\");\r\n      setAgregarClientes(\"Ocultar Agregar Clientes -\");\r\n      // boton.classList.remove(\"buttonagregarmas\");\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"customers\">\r\n      <div className=\"suppliers__buttonagregar\">\r\n        <button onClick={showAndHideDiv} id=\"botonagregar\">\r\n          {agregarClientes}\r\n        </button>\r\n      </div>\r\n      <div className=\"suppliers__container\" id=\"myDiv\">\r\n        <div className=\"suppliers__title\">\r\n          <h3>Ingresar CLientes</h3>\r\n        </div>\r\n        <div className=\"suppliers__error\">\r\n          {error && <Alert severity=\"error\">{error}</Alert>}\r\n        </div>\r\n        <div className=\"supplier__inputscontainer\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"suppliers__inputs\">\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Nombre\"\r\n                variant=\"outlined\"\r\n                name=\"namecustomer\"\r\n                value={namecustomer}\r\n                onChange={handleChange}\r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Rut\"\r\n                variant=\"outlined\"\r\n                name=\"rutcustomer\"\r\n                value={rutcustomer}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"suppliers__inputs2\">\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Dirección\"\r\n                variant=\"outlined\"\r\n                name=\"address\"\r\n                value={address}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"suppliers__inputs3\">\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Ciudad\"\r\n                variant=\"outlined\"\r\n                name=\"city\"\r\n                value={city}\r\n                onChange={handleChange}\r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Comuna / Provincia / Region\"\r\n                variant=\"outlined\"\r\n                name=\"province\"\r\n                value={province}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"suppliers__input4\">\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Teléfono (opcional)\"\r\n                variant=\"outlined\"\r\n                name=\"phone\"\r\n                value={phone}\r\n                onChange={handleChange}\r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Celular (opcional)\"\r\n                variant=\"outlined\"\r\n                name=\"movil\"\r\n                value={movil}\r\n                onChange={handleChange}\r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"suppliers__button\">\r\n              <button type=\"submit\">Guardar</button>\r\n            </div>\r\n          </form>\r\n          <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"success\">\r\n              Cliente guardado con éxito\r\n            </Alert>\r\n          </Snackbar>\r\n        </div>\r\n      </div>\r\n      <div className=\"suppliers2\">\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {customers\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <Customer\r\n                        key={row.id}\r\n                        id={row.id}\r\n                        infodata={row.datainfo}\r\n                      />\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 50]}\r\n            component=\"div\"\r\n            count={customers.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            labelRowsPerPage=\"Filas por página\"\r\n            backIconButtonText=\"Pagina anterior\"\r\n            nextIconButtonText=\"Siguiente pagina\"\r\n          />\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Customers;\r\n","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Customer.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Stock.js",["111"],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\SelectSupplier.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Product.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":27,"column":9,"nodeType":"118","messageId":"119","endLine":27,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":5,"column":1,"nodeType":"122","endLine":10,"endColumn":3},{"ruleId":"116","severity":1,"message":"123","line":29,"column":10,"nodeType":"118","messageId":"119","endLine":29,"endColumn":17},{"ruleId":"116","severity":1,"message":"124","line":29,"column":19,"nodeType":"118","messageId":"119","endLine":29,"endColumn":29},{"ruleId":"120","severity":1,"message":"121","line":7,"column":1,"nodeType":"122","endLine":23,"endColumn":3},{"ruleId":"116","severity":1,"message":"125","line":65,"column":11,"nodeType":"118","messageId":"119","endLine":65,"endColumn":15},{"ruleId":"116","severity":1,"message":"126","line":66,"column":11,"nodeType":"118","messageId":"119","endLine":66,"endColumn":14},{"ruleId":"116","severity":1,"message":"127","line":67,"column":11,"nodeType":"118","messageId":"119","endLine":67,"endColumn":14},{"ruleId":"116","severity":1,"message":"128","line":1,"column":28,"nodeType":"118","messageId":"119","endLine":1,"endColumn":34},{"ruleId":"116","severity":1,"message":"129","line":103,"column":7,"nodeType":"118","messageId":"119","endLine":103,"endColumn":17},{"ruleId":"116","severity":1,"message":"130","line":164,"column":9,"nodeType":"118","messageId":"119","endLine":164,"endColumn":14},{"ruleId":"116","severity":1,"message":"128","line":2,"column":28,"nodeType":"118","messageId":"119","endLine":2,"endColumn":34},{"ruleId":"116","severity":1,"message":"131","line":7,"column":10,"nodeType":"118","messageId":"119","endLine":7,"endColumn":30},{"ruleId":"116","severity":1,"message":"132","line":127,"column":7,"nodeType":"118","messageId":"119","endLine":127,"endColumn":18},{"ruleId":"116","severity":1,"message":"130","line":207,"column":9,"nodeType":"118","messageId":"119","endLine":207,"endColumn":14},{"ruleId":"116","severity":1,"message":"133","line":8,"column":8,"nodeType":"118","messageId":"119","endLine":8,"endColumn":23},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'hour' is assigned a value but never used.","'min' is assigned a value but never used.","'sec' is assigned a value but never used.","'useRef' is defined but never used.","'isRendered' is assigned a value but never used.","'boton' is assigned a value but never used.","'SettingsPowerRounded' is defined but never used.","'isRendering' is assigned a value but never used.","'AttachMoneyIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]