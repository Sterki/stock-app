[{"C:\\Users\\alexr\\Desktop\\stock-app\\src\\index.js":"1","C:\\Users\\alexr\\Desktop\\stock-app\\src\\App.js":"2","C:\\Users\\alexr\\Desktop\\stock-app\\src\\store.js":"3","C:\\Users\\alexr\\Desktop\\stock-app\\src\\reducers\\index.js":"4","C:\\Users\\alexr\\Desktop\\stock-app\\src\\reducers\\productReducers.js":"5","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Login.js":"6","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Register.js":"7","C:\\Users\\alexr\\Desktop\\stock-app\\src\\firebase.js":"8","C:\\Users\\alexr\\Desktop\\stock-app\\src\\actions\\usersActions.js":"9","C:\\Users\\alexr\\Desktop\\stock-app\\src\\types\\index.js":"10","C:\\Users\\alexr\\Desktop\\stock-app\\src\\reducers\\userReducers.js":"11","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\PrincipalPage.js":"12","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Header.js":"13","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Navbar.js":"14","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Suppliers.js":"15","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Supplier.js":"16","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Customers.js":"17","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Customer.js":"18","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Stock.js":"19","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\SelectSupplier.js":"20","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Product.js":"21","C:\\Users\\alexr\\Desktop\\stock-app\\src\\reducers\\SupplierReducers.js":"22","C:\\Users\\alexr\\Desktop\\stock-app\\src\\actions\\supplierActions.js":"23","C:\\Users\\alexr\\Desktop\\stock-app\\src\\reducers\\supplierReducers.js":"24","C:\\Users\\alexr\\Desktop\\stock-app\\src\\reducers\\customerReducers.js":"25","C:\\Users\\alexr\\Desktop\\stock-app\\src\\actions\\customerActions.js":"26","C:\\Users\\alexr\\Desktop\\stock-app\\src\\actions\\productActions.js":"27"},{"size":219,"mtime":1608108132394,"results":"28","hashOfConfig":"29"},{"size":2246,"mtime":1608191891901,"results":"30","hashOfConfig":"29"},{"size":417,"mtime":1607338721040,"results":"31","hashOfConfig":"29"},{"size":397,"mtime":1608628421079,"results":"32","hashOfConfig":"29"},{"size":343,"mtime":1608671406601,"results":"33","hashOfConfig":"29"},{"size":2945,"mtime":1608152186109,"results":"34","hashOfConfig":"29"},{"size":2768,"mtime":1607588870664,"results":"35","hashOfConfig":"29"},{"size":555,"mtime":1607342961103,"results":"36","hashOfConfig":"29"},{"size":406,"mtime":1607592799508,"results":"37","hashOfConfig":"29"},{"size":336,"mtime":1608670976466,"results":"38","hashOfConfig":"29"},{"size":423,"mtime":1607592647049,"results":"39","hashOfConfig":"29"},{"size":566,"mtime":1607596355984,"results":"40","hashOfConfig":"29"},{"size":4111,"mtime":1608325369411,"results":"41","hashOfConfig":"29"},{"size":1432,"mtime":1607947810334,"results":"42","hashOfConfig":"29"},{"size":9109,"mtime":1608633257808,"results":"43","hashOfConfig":"29"},{"size":9516,"mtime":1608634770327,"results":"44","hashOfConfig":"29"},{"size":10928,"mtime":1608636170414,"results":"45","hashOfConfig":"29"},{"size":10307,"mtime":1608710815670,"results":"46","hashOfConfig":"29"},{"size":14492,"mtime":1608715110407,"results":"47","hashOfConfig":"29"},{"size":0,"mtime":1608279549556,"results":"48","hashOfConfig":"29"},{"size":14846,"mtime":1608716058656,"results":"49","hashOfConfig":"29"},{"size":345,"mtime":1608628258637,"results":"50","hashOfConfig":"29"},{"size":288,"mtime":1608633590641,"results":"51","hashOfConfig":"29"},{"size":345,"mtime":1608628258637,"results":"52","hashOfConfig":"29"},{"size":332,"mtime":1608629484656,"results":"53","hashOfConfig":"29"},{"size":288,"mtime":1608631204067,"results":"54","hashOfConfig":"29"},{"size":322,"mtime":1608671157305,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1657a29",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"58"},"C:\\Users\\alexr\\Desktop\\stock-app\\src\\index.js",[],["122","123"],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\App.js",["124"],"import \"./App.css\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { auth } from \"./firebase\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserAction } from \"./actions/usersActions\";\nimport PrincipalPage from \"./components/PrincipalPage\";\nimport Header from \"./components/Header\";\nimport { closeSesionAction } from \"./actions/usersActions\";\nimport Suppliers from \"./components/Suppliers\";\nimport Customers from \"./components/Customers\";\nimport Stock from \"./components/Stock\";\n\nfunction wrappApp() {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n}\nfunction App() {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.users.user);\n  useEffect(() => {\n    auth.onAuthStateChanged((result) => {\n      if (result) {\n        dispatch(\n          getUserAction({\n            displayName: result.displayName,\n            email: result.email,\n            photoUrl: result.photoURL,\n            uid: result.uid,\n          })\n        );\n      } else {\n        dispatch(closeSesionAction());\n      }\n    });\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n            <Route path=\"/administrator\">\n              <Header />\n              <PrincipalPage />\n            </Route>\n            <Route path=\"/myprofile\">\n              <Header />\n              <PrincipalPage />\n            </Route>\n            <Route path=\"/customers\">\n              <Header />\n              <Customers />\n            </Route>\n            <Route path=\"/suppliers\">\n              <Header />\n              <Suppliers />\n            </Route>\n            <Route path=\"/panel\">\n              <Header />\n              <Stock />\n            </Route>\n            <Route path=\"/\">\n              <Login />\n            </Route>\n          </Switch>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default wrappApp;\n","C:\\Users\\alexr\\Desktop\\stock-app\\src\\store.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\reducers\\index.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\reducers\\productReducers.js",["125"],"import { GET_PRODUCT_TO_EDIT } from \"./../types\";\r\n\r\nconst inisialState = {\r\n  producttoedit: {},\r\n};\r\n\r\nexport default (state = inisialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PRODUCT_TO_EDIT:\r\n      return {\r\n        ...state,\r\n        producttoedit: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Login.js",["126","127"],"import React, { useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport login from \"./../images/login.png\";\r\nimport {\r\n  Backdrop,\r\n  CircularProgress,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { auth } from \"./../firebase\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const history = useHistory();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const { email, password } = user;\r\n  const handleChange = (e) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (email.trim() === \"\" || password.trim === \"\") {\r\n      return setError(\"Todos los campos son Obligatorios\");\r\n    }\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((result) => {\r\n        console.log(\"login succesfully!\");\r\n        setOpen(true);\r\n        setTimeout(() => {\r\n          setOpen(false);\r\n          history.push(\"/suppliers\");\r\n        }, 1500);\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__containerImg\">\r\n        <img src={login} alt=\"loginimage\" />\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"login__container\">\r\n          <h1>Login</h1>\r\n          {error ? <Alert severity=\"error\">{error}</Alert> : null}\r\n\r\n          <div className=\"login__inputs\">\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              variant=\"outlined\"\r\n              value={email}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"login__inputs\">\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Contraseña\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              value={password}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"login__inputs\">\r\n            <button>Ingresar</button>\r\n            <Link to=\"/register\">Crear una cuenta</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n        <CircularProgress color=\"inherit\" />{\" \"}\r\n        <span>Redireccionando hacia la pagina principal</span>\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Register.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\firebase.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\actions\\usersActions.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\types\\index.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\reducers\\userReducers.js",["128"],"import { GET_USER_LOGEG, CLOSE_SESION } from \"./../types\";\r\n\r\nconst inisialState = {\r\n  user: null,\r\n};\r\n\r\nexport default (state = inisialState, action) => {\r\n  switch (action.type) {\r\n    case GET_USER_LOGEG:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case CLOSE_SESION:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\PrincipalPage.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Header.js",["129","130","131"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { closeSesionAction } from \"./../actions/usersActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { auth } from \"../firebase\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction Header() {\r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const user = useSelector((state) => state.users.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const handleClickClose = () => {\r\n    auth.signOut();\r\n    dispatch(closeSesionAction());\r\n    history.push(\"/\");\r\n  };\r\n  const [thetime, setThetime] = useState({\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  });\r\n\r\n  const { hours, minutes, seconds } = thetime;\r\n  useEffect(() => {\r\n    function clock() {\r\n      let hour = document.getElementById(\"hours\");\r\n      let min = document.getElementById(\"minutes\");\r\n      let sec = document.getElementById(\"seconds\");\r\n\r\n      let h = new Date().getHours();\r\n      let m = new Date().getMinutes();\r\n      let s = new Date().getSeconds();\r\n\r\n      setThetime({\r\n        hours: h,\r\n        minutes: m,\r\n        seconds: s,\r\n      });\r\n    }\r\n    setInterval(clock, 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__menuicon\">\r\n        <IconButton\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n        >\r\n          {[\"left\"].map((anchor) => (\r\n            <React.Fragment key={anchor}>\r\n              <MenuIcon\r\n                style={{ color: \"white\", outline: \"none\" }}\r\n                onClick={toggleDrawer(anchor, true)}\r\n              />\r\n              <Drawer\r\n                anchor={anchor}\r\n                open={state[anchor]}\r\n                onClose={toggleDrawer(anchor, false)}\r\n              >\r\n                <div className=\"header__toggledrawwer\">\r\n                  <div className=\"header__title\">\r\n                    <h3>Constructora</h3>\r\n                    <h1>ANTA LTDA</h1>\r\n                  </div>\r\n                  <Navbar />\r\n                </div>\r\n              </Drawer>\r\n            </React.Fragment>\r\n          ))}\r\n        </IconButton>\r\n        <div></div>\r\n      </div>\r\n      <div className=\"header__username\">\r\n        <span>\r\n          Bienvenido <strong>{user?.email}</strong>\r\n        </span>\r\n      </div>\r\n      <div className=\"header__time\">\r\n        <div className=\"header__clock\">\r\n          <span id=\"hours\">{hours}</span>\r\n          <p>Horas</p>\r\n        </div>\r\n        <div className=\"header__clock\">\r\n          <span id=\"minutes\">{minutes}</span>\r\n          <p>Minutos</p>\r\n        </div>\r\n        <div className=\"header__clock\">\r\n          <span id=\"seconds\">{seconds}</span>\r\n          <p>Segundos</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"header__logoutavatar\">\r\n        <Tooltip title=\"Cerrar Sesión\" TransitionComponent={Zoom}>\r\n          <Avatar\r\n            alt={user?.email.toUpperCase()}\r\n            src=\"/static/images/avatar/1.jpg\"\r\n            onClick={handleClickClose}\r\n          />\r\n        </Tooltip>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;\r\n","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Navbar.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Suppliers.js",["132","133","134"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport \"./Suppliers.css\";\r\nimport db from \"./../firebase\";\r\nimport firebase from \"firebase\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Supplier from \"./Supplier\";\r\n\r\n//here fancy package to dev a grid table\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst columns = [\r\n  { id: \"rut\", label: \"Rut\", minWidth: 170 },\r\n  { id: \"nombreproveedor\", label: \"Nombre Proveedor\", minWidth: 100 },\r\n  {\r\n    id: \"direccion\",\r\n    label: \"Dirección\",\r\n    minWidth: 170,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    id: \"city\",\r\n    label: \"Ciudad\",\r\n    minWidth: 130,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    id: \"creador\",\r\n    label: \"Ingresado Por\",\r\n    minWidth: 100,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    id: \"delete\",\r\n    label: \"#\",\r\n    minWidth: 100,\r\n    align: \"left\",\r\n  },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Suppliers() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [agregarClientes, setAgregarClientes] = useState(\r\n    \"Agregar Proveedores +\"\r\n  );\r\n  const [error, setError] = useState(\"\");\r\n  const userAuth = useSelector((state) => state.users.user);\r\n  const [suppliers, setSuppliers] = useState([]);\r\n  const [supplier, setSupplier] = useState({\r\n    namesupplier: \"\",\r\n    rutsupplier: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    province: \"\",\r\n  });\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isRendered = true;\r\n    db.collection(\"suppliers\")\r\n      .orderBy(\"created\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        setSuppliers(\r\n          snapshot.docs.map((doc) => ({ idInfo: doc.id, suppInfo: doc.data() }))\r\n        );\r\n      });\r\n    return () => {\r\n      isRendered = false;\r\n    };\r\n  }, []);\r\n\r\n  const { namesupplier, rutsupplier, address, city, province } = supplier;\r\n\r\n  const handleChange = (e) => {\r\n    setSupplier({\r\n      ...supplier,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      namesupplier.trim() === \"\" ||\r\n      rutsupplier.trim() === \"\" ||\r\n      city.trim() === \"\" ||\r\n      address.trim() === \"\" ||\r\n      province.trim() === \"\"\r\n    ) {\r\n      setError(\"Todos los campos son obligatorios\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n      return;\r\n    } else {\r\n      db.collection(\"suppliers\")\r\n        .add({\r\n          name: namesupplier.toUpperCase(),\r\n          rut: rutsupplier,\r\n          address: address.toUpperCase(),\r\n          city: city.toUpperCase(),\r\n          province: province.toUpperCase(),\r\n          creator: userAuth.email,\r\n          created: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n        .catch((error) => {\r\n          setError(error.message);\r\n        });\r\n      setOpen(true);\r\n      setSupplier({\r\n        namesupplier: \"\",\r\n        rutsupplier: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        province: \"\",\r\n      });\r\n    }\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function showAndHideDiv() {\r\n    let div = document.getElementById(\"myDiv\");\r\n    let boton = document.getElementById(\"botonagregar\");\r\n\r\n    if (div.style.display === \"flex\") {\r\n      div.style.display = \"none\";\r\n      // boton.classList.add(\"buttonagregarmas\");\r\n      setAgregarClientes(\"Agregar Proveedores +\");\r\n      // boton.classList.remove(\"buttonagregarmenos\");\r\n    } else {\r\n      div.style.display = \"flex\";\r\n      // boton.classList.add(\"buttonagregarmenos\");\r\n      setAgregarClientes(\"Ocultar Agregar Proveedores -\");\r\n      // boton.classList.remove(\"buttonagregarmas\");\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"suppliers\">\r\n      <div className=\"suppliers__buttonagregar\">\r\n        <button onClick={showAndHideDiv} id=\"botonagregar\">\r\n          {agregarClientes}\r\n        </button>\r\n      </div>\r\n      <div className=\"suppliers__container\" id=\"myDiv\">\r\n        <div className=\"suppliers__title\">\r\n          <h3>Ingresar Proveedores</h3>\r\n          <div className=\"suppliers__error\">\r\n            {error && <Alert severity=\"error\">{error}</Alert>}\r\n          </div>\r\n        </div>\r\n        <div className=\"supplier__inputscontainer\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"suppliers__inputs\">\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Nombre\"\r\n                variant=\"outlined\"\r\n                name=\"namesupplier\"\r\n                value={namesupplier}\r\n                onChange={handleChange}\r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Rut\"\r\n                variant=\"outlined\"\r\n                name=\"rutsupplier\"\r\n                value={rutsupplier}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"suppliers__inputs2\">\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Dirección\"\r\n                variant=\"outlined\"\r\n                name=\"address\"\r\n                value={address}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"suppliers__inputs3\">\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Ciudad\"\r\n                variant=\"outlined\"\r\n                name=\"city\"\r\n                value={city}\r\n                onChange={handleChange}\r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Comuna / Provincia / Region\"\r\n                variant=\"outlined\"\r\n                name=\"province\"\r\n                value={province}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"success\">\r\n                Proveedor guardado con éxito\r\n              </Alert>\r\n            </Snackbar>\r\n            <div className=\"suppliers__button\">\r\n              <button type=\"submit\">Guardar</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className=\"suppliers2\">\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {suppliers\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <Supplier\r\n                        key={row.idInfo}\r\n                        idsupplier={row.idInfo}\r\n                        infodata={row.suppInfo}\r\n                      />\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 50]}\r\n            component=\"div\"\r\n            count={suppliers.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            labelRowsPerPage=\"Filas por página\"\r\n            backIconButtonText=\"Pagina anterior\"\r\n            nextIconButtonText=\"Siguiente pagina\"\r\n          />\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Suppliers;\r\n","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Supplier.js",["135","136"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Supplier.css\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { TextField, Tooltip } from \"@material-ui/core\";\r\nimport db from \"./../firebase\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport Swal from \"sweetalert2\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport firebase from \"firebase\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getSupplierToEditAction } from \"../actions/supplierActions\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"0px solid lightgray\",\r\n    borderRadius: \"5px\",\r\n    WebkitBoxShadow: \"1px 1px 0px 10px inset var(--azul)\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(3, 5, 3),\r\n    outline: \"none\",\r\n  },\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nfunction Supplier({ idsupplier, infodata }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [proveedorEliminar, setProveedorEliminar] = useState();\r\n  const dispatch = useDispatch();\r\n  const useAuth = useSelector((state) => state.users.user);\r\n  const suppliertoedit = useSelector((state) => state.suppliers.suppliertoedit);\r\n  const [errorForm, setErrorForm] = useState(\"\");\r\n  const [proveedor, saveProveedor] = useState({\r\n    rut: \"\",\r\n    name: \"\",\r\n    creator: \"\",\r\n    city: \"\",\r\n    address: \"\",\r\n    province: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    saveProveedor(suppliertoedit);\r\n  }, [suppliertoedit]);\r\n\r\n  if (suppliertoedit === null) return null;\r\n  const { name, creator, address, city, province, rut } = proveedor;\r\n\r\n  const handleOpenModal = () => {\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n  };\r\n  const handleClickOpen = (infodata) => {\r\n    setOpen(true);\r\n    setProveedorEliminar(infodata.name);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleClickDelete = (idsupplier) => {\r\n    if (idsupplier) {\r\n      db.collection(\"suppliers\")\r\n        .doc(idsupplier)\r\n        .delete()\r\n        .then((result) => {\r\n          console.log(\"proveedor eliminado\");\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            title: \"Proveedor Eliminado\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.message);\r\n        });\r\n    }\r\n  };\r\n  const handleChange = (e) => {\r\n    saveProveedor({\r\n      ...proveedor,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleClickOpenEditar = (infodata) => {\r\n    // here add the info data to save into our data layer\r\n    // console.log(\"el id del proveedor es:\", id);\r\n    // console.log(\"el proveedor a editar es:\", infodata);\r\n    setOpenModal(true);\r\n    // setSupplierToEdit({ id, infodata });\r\n\r\n    dispatch(getSupplierToEditAction(infodata));\r\n    // console.log(proveedor);\r\n  };\r\n\r\n  const handleClickEditar = (e) => {\r\n    e.preventDefault();\r\n    // console.log(proveedor);\r\n    if (\r\n      name.trim() === \"\" ||\r\n      rut.trim() === \"\" ||\r\n      address.trim() === \"\" ||\r\n      province.trim() === \"\" ||\r\n      city.trim() === \"\"\r\n    ) {\r\n      setErrorForm(\"Debe ingresar todos los campos\");\r\n      setTimeout(() => {\r\n        setErrorForm(\"\");\r\n      }, 3000);\r\n    } else {\r\n      db.collection(\"suppliers\")\r\n        .doc(idsupplier)\r\n        .update({\r\n          name: name,\r\n          rut: rut,\r\n          address: address,\r\n          province: province,\r\n          city: city,\r\n          creator: useAuth.email,\r\n          created: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n        .then(function () {\r\n          console.log(\"uctualizado correctamente!\");\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            title: \"Proveedor Editado con exito\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n          setOpenModal(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error.message);\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <TableRow hover role=\"checkbox\" tabIndex={-1}>\r\n        <TableCell>{infodata.rut}</TableCell>\r\n        <TableCell>{infodata.name}</TableCell>\r\n        <TableCell>{infodata.address}</TableCell>\r\n        <TableCell>{infodata.city}</TableCell>\r\n        <TableCell>{infodata.creator}</TableCell>\r\n        <TableCell>\r\n          <Tooltip title=\"Editar Proveedor\">\r\n            <EditIcon onClick={(e) => handleClickOpenEditar(infodata)} />\r\n          </Tooltip>\r\n          <Tooltip title=\"Eliminar Proveedor\">\r\n            <DeleteForeverIcon onClick={(e) => handleClickOpen(infodata)} />\r\n          </Tooltip>\r\n        </TableCell>\r\n      </TableRow>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <WarningIcon />\r\n          {/* <DialogContentText id=\"alert-dialog-description\">\r\n            Una vez eliminado no podras\r\n          </DialogContentText> */}\r\n        </DialogContent>\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {`Estas seguro que quieres eliminar ${proveedorEliminar}`}\r\n        </DialogTitle>\r\n\r\n        <DialogActions\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <button className=\"supplier__buttondisagree\" onClick={handleClose}>\r\n            Cancelar\r\n          </button>\r\n          <button\r\n            className=\"supplier__buttonagree\"\r\n            onClick={(e) => handleClickDelete(idsupplier)}\r\n          >\r\n            Aceptar\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div>\r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={openModal}\r\n          onClose={handleCloseModal}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}\r\n        >\r\n          <Fade in={openModal}>\r\n            <div className={classes.paper}>\r\n              <div className=\"suppliers__titlemodal\">\r\n                <h3>Editar Proveedor</h3>\r\n              </div>\r\n              <div className=\"suppliers__error\">\r\n                {errorForm && <Alert severity=\"error\">{errorForm}</Alert>}\r\n              </div>\r\n              <form>\r\n                <div className=\"suppliers__inputs\">\r\n                  <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Nombre\"\r\n                    variant=\"outlined\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Rut\"\r\n                    variant=\"outlined\"\r\n                    name=\"rut\"\r\n                    value={rut}\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"suppliers__inputs2\">\r\n                  <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Dirección\"\r\n                    variant=\"outlined\"\r\n                    name=\"address\"\r\n                    value={address}\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"suppliers__inputs3\">\r\n                  <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Ciudad\"\r\n                    variant=\"outlined\"\r\n                    name=\"city\"\r\n                    value={city}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Comuna / Provincia / Region\"\r\n                    variant=\"outlined\"\r\n                    name=\"province\"\r\n                    value={province}\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"suppliers__button\">\r\n                  <button type=\"submit\" onClick={handleClickEditar}>\r\n                    Editar\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Supplier;\r\n","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Customers.js",["137","138","139","140"],"import { makeStyles, Snackbar, TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./Customers.css\";\r\nimport \"./Suppliers.css\";\r\nimport db from \"./../firebase\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { SettingsPowerRounded } from \"@material-ui/icons\";\r\nimport firebase from \"firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Customer from \"./Customer\";\r\n\r\n//imports para las tablas\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst columns = [\r\n  { id: \"rut\", label: \"Rut\", minWidth: 100 },\r\n  {\r\n    id: \"nombreproveedor\",\r\n    label: \"Nombre Cliente\",\r\n    minWidth: 120,\r\n  },\r\n  {\r\n    id: \"direccion\",\r\n    label: \"Dirección\",\r\n    minWidth: 170,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    id: \"city\",\r\n    label: \"Ciudad\",\r\n    minWidth: 150,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    id: \"email\",\r\n    label: \"Email\",\r\n    minWidth: 170,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    id: \"phone\",\r\n    label: \"Teléfono\",\r\n    minWidth: 100,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    id: \"delete\",\r\n    label: \"#\",\r\n    minWidth: 100,\r\n    align: \"left\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  },\r\n}));\r\nfunction Customers() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [agregarClientes, setAgregarClientes] = useState(\"Agregar Clientes +\");\r\n  const userAuth = useSelector((state) => state.users.user);\r\n  const [customers, setCustomers] = useState([]);\r\n  const [customer, setCustomer] = useState({\r\n    namecustomer: \"\",\r\n    rutcustomer: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    province: \"\",\r\n    phone: \"\",\r\n    movil: \"\",\r\n    email: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const {\r\n    namecustomer,\r\n    rutcustomer,\r\n    address,\r\n    city,\r\n    province,\r\n    phone,\r\n    movil,\r\n    email,\r\n  } = customer;\r\n\r\n  //useEffect para obtener los datos de los clientes\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isRendering = true;\r\n    db.collection(\"customers\")\r\n      .orderBy(\"created\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        setCustomers(\r\n          snapshot.docs.map((doc) => ({ id: doc.id, datainfo: doc.data() }))\r\n        );\r\n      });\r\n    return () => {\r\n      isRendering = false;\r\n    };\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleChange = (e) => {\r\n    setCustomer({\r\n      ...customer,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (namecustomer.trim() === \"\") {\r\n      setError(\"El nombre del cliente es obligatorio\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n      return;\r\n    } else if (rutcustomer.trim() === \"\") {\r\n      setError(\"el rut del cliente es obligatorio\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n      return;\r\n    } else if (address.trim() === \"\") {\r\n      setError(\"La dirección es obligatoria\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n      return;\r\n    } else if (email.trim() === \"\") {\r\n      setError(\"El email es obligatorio\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n      return;\r\n    } else if (city.trim() === \"\") {\r\n      setError(\"La ciudad es obligatoria\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n      return;\r\n    } else {\r\n      db.collection(\"customers\")\r\n        .add({\r\n          namecustomer: namecustomer.toUpperCase(),\r\n          rutcustomer: rutcustomer,\r\n          address: address.toUpperCase(),\r\n          city: city.toUpperCase(),\r\n          province: province.toUpperCase(),\r\n          phone: phone,\r\n          movil: movil,\r\n          email: email.toUpperCase(),\r\n          created: firebase.firestore.FieldValue.serverTimestamp(),\r\n          creator: userAuth.email,\r\n        })\r\n        .then((result) => {\r\n          setOpen(true);\r\n          console.log(\"cliente agregado correctamente!\");\r\n          setCustomer({\r\n            namecustomer: \"\",\r\n            rutcustomer: \"\",\r\n            address: \"\",\r\n            city: \"\",\r\n            province: \"\",\r\n            phone: \"\",\r\n            movil: \"\",\r\n            email: \"\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.message);\r\n        });\r\n    }\r\n  };\r\n  function showAndHideDiv() {\r\n    let div = document.getElementById(\"myDiv\");\r\n    let boton = document.getElementById(\"botonagregar\");\r\n\r\n    if (div.style.display === \"flex\") {\r\n      div.style.display = \"none\";\r\n      // boton.classList.add(\"buttonagregarmas\");\r\n      setAgregarClientes(\"Agregar Clientes +\");\r\n      // boton.classList.remove(\"buttonagregarmenos\");\r\n    } else {\r\n      div.style.display = \"flex\";\r\n      // boton.classList.add(\"buttonagregarmenos\");\r\n      setAgregarClientes(\"Ocultar Agregar Clientes -\");\r\n      // boton.classList.remove(\"buttonagregarmas\");\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"customers\">\r\n      <div className=\"suppliers__buttonagregar\">\r\n        <button onClick={showAndHideDiv} id=\"botonagregar\">\r\n          {agregarClientes}\r\n        </button>\r\n      </div>\r\n      <div className=\"suppliers__container\" id=\"myDiv\">\r\n        <div className=\"suppliers__title\">\r\n          <h3>Ingresar CLientes</h3>\r\n        </div>\r\n        <div className=\"suppliers__error\">\r\n          {error && <Alert severity=\"error\">{error}</Alert>}\r\n        </div>\r\n        <div className=\"supplier__inputscontainer\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"suppliers__inputs\">\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Nombre\"\r\n                variant=\"outlined\"\r\n                name=\"namecustomer\"\r\n                value={namecustomer}\r\n                onChange={handleChange}\r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Rut\"\r\n                variant=\"outlined\"\r\n                name=\"rutcustomer\"\r\n                value={rutcustomer}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"suppliers__inputs2\">\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Dirección\"\r\n                variant=\"outlined\"\r\n                name=\"address\"\r\n                value={address}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"suppliers__inputs3\">\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Ciudad\"\r\n                variant=\"outlined\"\r\n                name=\"city\"\r\n                value={city}\r\n                onChange={handleChange}\r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Comuna / Provincia / Region\"\r\n                variant=\"outlined\"\r\n                name=\"province\"\r\n                value={province}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"suppliers__input4\">\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Teléfono (opcional)\"\r\n                variant=\"outlined\"\r\n                name=\"phone\"\r\n                value={phone}\r\n                onChange={handleChange}\r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Celular (opcional)\"\r\n                variant=\"outlined\"\r\n                name=\"movil\"\r\n                value={movil}\r\n                onChange={handleChange}\r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"suppliers__button\">\r\n              <button type=\"submit\">Guardar</button>\r\n            </div>\r\n          </form>\r\n          <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"success\">\r\n              Cliente guardado con éxito\r\n            </Alert>\r\n          </Snackbar>\r\n        </div>\r\n      </div>\r\n      <div className=\"suppliers2\">\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {customers\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <Customer\r\n                        key={row.id}\r\n                        id={row.id}\r\n                        infodata={row.datainfo}\r\n                      />\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 50]}\r\n            component=\"div\"\r\n            count={customers.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            labelRowsPerPage=\"Filas por página\"\r\n            backIconButtonText=\"Pagina anterior\"\r\n            nextIconButtonText=\"Siguiente pagina\"\r\n          />\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Customers;\r\n","C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Customer.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Stock.js",["141","142"],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\SelectSupplier.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\components\\Product.js",["143"],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\reducers\\SupplierReducers.js",["144"],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\actions\\supplierActions.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\reducers\\supplierReducers.js",["145"],"import { GET_SUPPLIER_TO_EDIT } from \"../types\";\r\n\r\nconst inisialState = {\r\n  suppliertoedit: {},\r\n};\r\n\r\nexport default (state = inisialState, action) => {\r\n  switch (action.type) {\r\n    case GET_SUPPLIER_TO_EDIT:\r\n      return {\r\n        ...state,\r\n        suppliertoedit: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\alexr\\Desktop\\stock-app\\src\\reducers\\customerReducers.js",["146"],"import { GET_CUSTOMER_TO_EDIT } from \"./../types\";\r\n\r\nconst inisialState = {\r\n  customer: {},\r\n};\r\n\r\nexport default (state = inisialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CUSTOMER_TO_EDIT:\r\n      return{\r\n        ...state,\r\n        customer: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\alexr\\Desktop\\stock-app\\src\\actions\\customerActions.js",[],"C:\\Users\\alexr\\Desktop\\stock-app\\src\\actions\\productActions.js",["147"],"import Product from \"../components/Product\";\r\nimport { GET_PRODUCT_TO_EDIT } from \"./../types\";\r\n\r\nexport function productToEditAction(product) {\r\n  return (dispatch) => {\r\n    dispatch(getProductToEdit(product));\r\n  };\r\n}\r\nconst getProductToEdit = (product) => ({\r\n  type: GET_PRODUCT_TO_EDIT,\r\n  payload: product,\r\n});\r\n",{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":27,"column":9,"nodeType":"154","messageId":"155","endLine":27,"endColumn":13},{"ruleId":"156","severity":1,"message":"157","line":7,"column":1,"nodeType":"158","endLine":17,"endColumn":3},{"ruleId":"152","severity":1,"message":"159","line":29,"column":10,"nodeType":"154","messageId":"155","endLine":29,"endColumn":17},{"ruleId":"152","severity":1,"message":"160","line":29,"column":19,"nodeType":"154","messageId":"155","endLine":29,"endColumn":29},{"ruleId":"156","severity":1,"message":"157","line":7,"column":1,"nodeType":"158","endLine":23,"endColumn":3},{"ruleId":"152","severity":1,"message":"161","line":65,"column":11,"nodeType":"154","messageId":"155","endLine":65,"endColumn":15},{"ruleId":"152","severity":1,"message":"162","line":66,"column":11,"nodeType":"154","messageId":"155","endLine":66,"endColumn":14},{"ruleId":"152","severity":1,"message":"163","line":67,"column":11,"nodeType":"154","messageId":"155","endLine":67,"endColumn":14},{"ruleId":"152","severity":1,"message":"164","line":1,"column":28,"nodeType":"154","messageId":"155","endLine":1,"endColumn":34},{"ruleId":"152","severity":1,"message":"165","line":103,"column":7,"nodeType":"154","messageId":"155","endLine":103,"endColumn":17},{"ruleId":"152","severity":1,"message":"166","line":164,"column":9,"nodeType":"154","messageId":"155","endLine":164,"endColumn":14},{"ruleId":"152","severity":1,"message":"167","line":67,"column":17,"nodeType":"154","messageId":"155","endLine":67,"endColumn":24},{"ruleId":"152","severity":1,"message":"168","line":69,"column":9,"nodeType":"154","messageId":"155","endLine":69,"endColumn":24},{"ruleId":"152","severity":1,"message":"164","line":2,"column":28,"nodeType":"154","messageId":"155","endLine":2,"endColumn":34},{"ruleId":"152","severity":1,"message":"169","line":7,"column":10,"nodeType":"154","messageId":"155","endLine":7,"endColumn":30},{"ruleId":"152","severity":1,"message":"170","line":127,"column":7,"nodeType":"154","messageId":"155","endLine":127,"endColumn":18},{"ruleId":"152","severity":1,"message":"166","line":207,"column":9,"nodeType":"154","messageId":"155","endLine":207,"endColumn":14},{"ruleId":"152","severity":1,"message":"171","line":8,"column":8,"nodeType":"154","messageId":"155","endLine":8,"endColumn":23},{"ruleId":"152","severity":1,"message":"166","line":230,"column":9,"nodeType":"154","messageId":"155","endLine":230,"endColumn":14},{"ruleId":"152","severity":1,"message":"172","line":7,"column":8,"nodeType":"154","messageId":"155","endLine":7,"endColumn":19},{"ruleId":"156","severity":1,"message":"157","line":7,"column":1,"nodeType":"158","endLine":17,"endColumn":3},{"ruleId":"156","severity":1,"message":"157","line":7,"column":1,"nodeType":"158","endLine":17,"endColumn":3},{"ruleId":"156","severity":1,"message":"157","line":7,"column":1,"nodeType":"158","endLine":17,"endColumn":3},{"ruleId":"152","severity":1,"message":"173","line":1,"column":8,"nodeType":"154","messageId":"155","endLine":1,"endColumn":15},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'hour' is assigned a value but never used.","'min' is assigned a value but never used.","'sec' is assigned a value but never used.","'useRef' is defined but never used.","'isRendered' is assigned a value but never used.","'boton' is assigned a value but never used.","'creator' is assigned a value but never used.","'handleOpenModal' is assigned a value but never used.","'SettingsPowerRounded' is defined but never used.","'isRendering' is assigned a value but never used.","'AttachMoneyIcon' is defined but never used.","'ProgressBar' is defined but never used.","'Product' is defined but never used.","no-global-assign","no-unsafe-negation"]